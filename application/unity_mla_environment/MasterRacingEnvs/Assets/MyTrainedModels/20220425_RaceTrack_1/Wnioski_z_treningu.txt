Wnioski dla wyników treningu RaceTrack_2_PPO_1:
Model osiągnął najlepsze przystosowanie względem rzeczywistej funkcji celu (jakim jest przejechanie toru wyścigowego w jak najkrótszym czasie) ok. 1700000 kroku symulacji.

Jedyny model nadający się do zaprezentowania to CarAgentSimpleBehaviour-1647798.onnx.

Opis modelu CarAgentSimpleBehaviour-1647798.onnx:
Model jest w stanie przejechać kilka okrążeń pod rząd, prowadząc w miarę bezpieczny sposób. Kolizje występują głównie na najostrzejszych zakrętach (przede wszystkim pierwszy zakręt) i mają one charakter odbicia się bokiem samochodu od barierki. 
Model jazdy nie wykazuje jednak stabilności tempa.
Eksperyment dla 8 okrążeń wykazał czasy:
1. 55,06 s
2. 55,86 s
3. 57,84 s
4. 60,80 s <- WORST
5. 56,20 s
6. 57,46 s
7. 48,74 s <- BEST
8. DNF (kraksa na pierwszym zakręcie).

Co daje różnicę ponad 12 sekund pomiędzy najszybszym i najwolniejszym okrążeniem.
48 sekund to przybliżony czas jaki ja byłem w stanie bezpiecznie osiągać.

Jeśli model zderzy się z barierką w taki sposób, że obróci się do niej przodem (czyli prostopadle do drogi), to nie jest w stanie wrócić już do jazdy. Oddala się jedynie od barierki, żeby się z nią nie stykać (bo za to dostaje kary), i staje w miejscu.
Problemem może być zbyt wąski kąt widzenia - z takiej pozycji sieć nie widzi, gdzie jest droga i w którą stronę powinien obrócić się samochód.

Ponadto model radzi sobie z jazdą tylko wtedy, gdy kolor drogi wyraźnie kontrastuje
z poboczem - przy włączonym oświetleniu sieć się gubi, dojeżdżając do miejsca gdzie droga zbyt się rozjaśnia z powodu oświetlenia.

Opis pozostałych modeli:
Pozostałe modele nie są w stanie przejechać pełnego okrążenia - wywalają się na pierwszym zakręcie, ponieważ jadą ze zbyt wielką prędkością i uderzają prosto w barierkę. Siła uderzenia ustawia samochód bokiem do toru, a w tej pozycji sieć jest bezradna i nie umie nic zrobić.

Wnioski:
0) Gdyby nie udało się uzyskać lepiej wytrenowanego modelu, to CarAgentSimpleBehaviour-1647798.onnx nadawałby się do wykorzystania w pracy magisterskiej.
1) W funkcji nagród za słabo są karane uderzenia w barierkę, przez co model nie hamuje przed zakrętem i uderza z całej siły. ROZWIĄZANIE: wzmocnić karanie za zderzenie z barierką.
2) Model kompletnie nie radzi sobie przy włączonym oświetleniu, gdy kolor drogi jaśnieje.
ROZWIĄZANIE: dla każdego epizodu losować pozycję, orientację, kolor i nasilenie oświetlenia oraz pozycję i orientację samochodu (w którą stronę toru samochód jedzie).
3) Na pięć zapisanych modeli tylko jeden (najstarszy) nadawał się do pokazania.
Reszta uległa przeuczeniu w skutek złej funkcji nagród. Gdyby trening potrwał dłużej, żadna z sieci nie nadawałaby się do pokazania, a ja nie wiedziałbym co się stało. ROZWIĄZANIE: zwiększyć do 10 liczbę zapisywanych modeli.

Co trzeba zrobić:
[ ] Zapisać model CarAgentSimpleBehaviour-1647798.onnx w bezpiecznym miejscu (może dodać do repozytorium?). Obok modelu umieść jego opis (jak został wytrenowany oraz czym się charakteryzuje).
[ ] Dołącz do mastera gałąź race_track_2.
[ ] Utworzyć nową gałąź na kolejny eksperyment.
[ ] Wzmocnić karanie za uderzenia w barierki.
[ ] Dla każdego epizodu losować pozycję, orientację, kolor i nasilenie oświetlenia oraz pozycję i orientację samochodu
[ ] Zwiększyć do 10 liczbę zapisywanych modeli sieci.
[ ] Zaimplementować równoległy trening wielu instancji agentów (wiele kopii torów wyścigowych na jednej scenie - to przyspieszy trening).
[ ] Zmiana algorytmu uczącego na SAC - to powinno zwiększyć efektywność uczenia, ponieważ do treningu są reużywane wcześniejsze obserwacje (w przeciwieństwie do PPO).
[ ] Ograniczenie maksymalnej zmiany kąta kierownicy, jaka może być wykonana pomiędzy 2 krokami symulacji (czyli o ile sieć może w pojedynczej akcji maksymalnie zmienić kąt kierownicy samochodu). Jako wejście trzeba do sieci dodać informację o ostatnim skręcie kierownicą.
